openapi: 3.0.0
info:
  title: User Management Service
  version: '1.0'
tags:
  - name: UserManagement
paths:
  /v1/accepted-terms-of-use/{logId}:
    get:
      operationId: UserManagement_getAcceptedTermsOfUseLog
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementGetAcceptedTermsOfUseLogResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: logId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/actors/{actorId}:
    get:
      summary: Returns a platform actor (user/client/bot) based on its ID
      operationId: UserManagement_getActor
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementActorResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: actorId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/actors/search:
    post:
      summary: Returns a platform actor (user/client/bot) based on a search criteria
      operationId: UserManagement_searchActor
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementActorResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: federatedIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNKNOWN
              - MICROSOFT
              - WECOM
              - TELEGRAM
              - WHATSAPP
              - SIGNAL
              - WECHAT_NATIVE
              - WECHAT_MINIAPP
              - LINE
              - SMS
              - WHATSAPP_BUSINESS
              - APPLE_ID
              - LEAPXPERT_FMOP
              - SLACK
              - SMS_NATIVE
              - VOICE
            default: UNKNOWN
        - name: federatedIdentity.id
          description: federated Id in the external party e.g. NameID returned in SAML protocol
          in: query
          required: false
          schema:
            type: string
        - name: federatedIdentity.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - AUTHENTICATION
              - MESSAGING
            default: AUTHENTICATION
        - name: federatedIdentity.objectId
          description: database entity id
          in: query
          required: false
          schema:
            type: string
        - name: federatedIdentity.companyId
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/baseUsers:
    get:
      operationId: UserManagement_getBaseUsers
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementBaseUsersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: email
          in: query
          required: false
          schema:
            type: string
        - name: phoneNumber
          in: query
          required: false
          schema:
            type: string
        - name: baseUserIds.ids
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includesBots
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - UserManagement
  /v1/bots:
    get:
      operationId: UserManagement_getBots
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementBotsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: triggeredBy
          in: query
          required: false
          schema:
            type: string
            enum:
              - NO_TRIGGERED_BY
              - TRIGGERED_BY_WORKFLOW
            default: NO_TRIGGERED_BY
        - name: botIdList.id
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: triggeredByMethod
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - NO_TRIGGERED_BY
                - TRIGGERED_BY_WORKFLOW
        - name: type
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - UNKNOWN
                - API_KEY
                - INBOUND
                - WORKFLOW
                - MENTIONED
      tags:
        - UserManagement
    post:
      operationId: UserManagement_saveBot
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementBotResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/usermanagementBot'
      tags:
        - UserManagement
  /v1/bots/{botId}:
    delete:
      operationId: UserManagement_deleteBot
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonEmptyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: botId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
    put:
      operationId: UserManagement_updateBot
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementBotResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: botId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/usermanagementBot'
      tags:
        - UserManagement
  /v1/bots/search:
    post:
      operationId: UserManagement_searchBots
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementSearchBotsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementSearchBotRequest'
        required: true
      tags:
        - UserManagement
  /v1/clients:
    get:
      operationId: UserManagement_getClients
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementClientsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: userId
          in: query
          required: false
          schema:
            type: string
        - name: clientIdList.id
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: externalCompanyId
          in: query
          required: false
          schema:
            type: string
        - name: adminAdditionalParams.companyId
          in: query
          required: false
          schema:
            type: string
        - name: adminAdditionalParams.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sharedSearchType
          in: query
          required: false
          schema:
            type: string
            enum:
              - PRIVATE
              - PUBLIC
              - ALL
            default: PRIVATE
        - name: statuses
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: isFromApiServer
          description: temporary flag to indicate request comes from api-server, i.e.RBAC should not be applied
          in: query
          required: false
          schema:
            type: boolean
        - name: contactSearchType
          in: query
          required: false
          schema:
            type: string
            enum:
              - ALL_CONTACT
              - PRIVATE_CONTACT
              - COMPANY_CONTACT
            default: ALL_CONTACT
      tags:
        - UserManagement
    post:
      operationId: UserManagement_saveClient
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementClientResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        $ref: '#/components/requestBodies/usermanagementSaveClientRequest'
      tags:
        - UserManagement
    patch:
      operationId: UserManagement_saveClients
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementClientsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementSaveClientsRequest'
        required: true
      tags:
        - UserManagement
  /v1/clients/{clientId}:
    get:
      operationId: UserManagement_getClient
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementClientResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: clientName
          description: deprecated
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: isFromApiServer
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - UserManagement
  /v1/clients/{clientId}/roles:
    get:
      operationId: UserManagement_getClientRoles
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementRolesAssignmentResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/clients/{clientId}/status:
    put:
      operationId: UserManagement_updateClientStatus
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementUpdateClientStatusResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                requestIdentity:
                  $ref: '#/components/schemas/commonServiceRequestIdentity'
                status:
                  $ref: '#/components/schemas/commonEntityStatus'
        required: true
      tags:
        - UserManagement
  /v1/clients/add_shared_client:
    post:
      operationId: UserManagement_addSharedClientToContact
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementClientResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementAddSharedClientToContactRequest'
        required: true
      tags:
        - UserManagement
  /v1/clients/batch/user-assignments:
    put:
      operationId: UserManagement_updateClientsUserAssignments
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementClientsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementUpdateClientsUserAssignmentsRequest'
        required: true
      tags:
        - UserManagement
  /v1/clients/bulk-import:
    get:
      operationId: UserManagement_getBulkImports
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementBulkImportsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: importType
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENTS
              - CLIENT_USER_ASSIGNMENTS
              - USERS
              - CLIENT_OU_ASSIGNMENTS
            default: CLIENTS
      tags:
        - UserManagement
    post:
      operationId: UserManagement_submitBulkImportClient
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementSubmitBulkImportResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementSubmitBulkImportClientRequest'
        required: true
      tags:
        - UserManagement
  /v1/clients/bulk-import/{id}:
    get:
      operationId: UserManagement_getBulkImport
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementBulkImportResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: importType
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENTS
              - CLIENT_USER_ASSIGNMENTS
              - USERS
              - CLIENT_OU_ASSIGNMENTS
            default: CLIENTS
      tags:
        - UserManagement
  /v1/clients/bulk-import/{id}/terminate:
    post:
      operationId: UserManagement_terminateBulkImport
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementTerminateBulkImportResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: importType
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENTS
              - CLIENT_USER_ASSIGNMENTS
              - USERS
              - CLIENT_OU_ASSIGNMENTS
            default: CLIENTS
      tags:
        - UserManagement
  /v1/clients/bulk-import/template:
    get:
      operationId: UserManagement_downloadBulkImportClientTemplate
      responses:
        '200':
          description: A successful response.(streaming responses)
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/commonFile'
                  error:
                    $ref: '#/components/schemas/rpcStatus'
                title: Stream result of commonFile
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: importType
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENTS
              - CLIENT_USER_ASSIGNMENTS
              - USERS
              - CLIENT_OU_ASSIGNMENTS
            default: CLIENTS
      tags:
        - UserManagement
  /v1/clients/chat-room-report:
    get:
      operationId: UserManagement_exportClientChatRoomReport
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementExportClientChatRoomReportResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: startDate
          in: query
          required: false
          schema:
            type: string
        - name: endDate
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/clients/check-name/{name}:
    get:
      operationId: UserManagement_isClientNameAvailable
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementNameAvailableResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/clients/default:
    post:
      operationId: UserManagement_createDefaultClient
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementClientResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        $ref: '#/components/requestBodies/usermanagementSaveClientRequest'
      tags:
        - UserManagement
  /v1/clients/generate-client-name:
    get:
      operationId: UserManagement_generateClientName
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementGenerateNameResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/clients/import:
    post:
      summary: |-
        EXTERNAL API.
        Method to import clients from external platform.
        External platforms need to send each creation and update of a client to this endpoing to ensure that LeapXpert FMOP is up to date with latest changes.
      operationId: UserManagement_importExternalClient
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementImportExternalClientResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementImportExternalClientRequest'
        description: |-
          ImportExternalClientRequest represents request to be sent as part of invocation of importExternalClient function.
          Contents of the request is a single entry of a client which exists on external platform.
        required: true
      tags:
        - UserManagement
  /v1/clients/info/download:
    get:
      operationId: UserManagement_downloadOrgUnitClients
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementDownloadOrgUnitClientsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: parentOrganizationalUnitId
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/clients/integration/status-report:
    get:
      operationId: UserManagement_exportClientIntegrationStatusReport
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementExportClientIntegrationStatusReportResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/clients/list:
    post:
      operationId: UserManagement_getClients2
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementClientsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementGetClientsRequest'
        required: true
      tags:
        - UserManagement
  /v1/clients/name/{clientName}:
    get:
      operationId: UserManagement_getClient2
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementClientResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: clientName
          description: deprecated
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: clientId
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: isFromApiServer
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - UserManagement
  /v1/clients/phone-numbers/{phoneNumber}/available:
    get:
      operationId: UserManagement_isPhoneNumberAvailable
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementPhoneNumberAvailableResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: phoneNumber
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: excludeClientId
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/clients/promote:
    post:
      operationId: UserManagement_promoteNonVerifiedClient
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementClientResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        $ref: '#/components/requestBodies/usermanagementSaveClientRequest'
      tags:
        - UserManagement
  /v1/clients/search:
    post:
      operationId: UserManagement_searchClients
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementSearchClientsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: x-user-id
          description: On behalf of this user
          in: header
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/usermanagementSearchRequest'
      tags:
        - UserManagement
      security:
        - api-key: []
        - bearer-jwt: []
  /v1/clients/status:
    put:
      operationId: UserManagement_updateClientsStatus
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementUpdateClientsStatusResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementUpdateClientsStatusRequest'
        required: true
      tags:
        - UserManagement
      security:
      - api-key: []
      - bearer-jwt: []
  /v1/clients/update-password:
    post:
      operationId: UserManagement_updateClientPassword
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonEmptyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        $ref: '#/components/requestBodies/usermanagementUpdatePasswordRequest'
      tags:
        - UserManagement
  /v1/clients/user-assignments:
    put:
      operationId: UserManagement_updateClientUserAssignments
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementClientResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementUpdateClientUserAssignmentsRequest'
        required: true
      tags:
        - UserManagement
  /v1/companies:
    get:
      operationId: UserManagement_getCompanies
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementCompaniesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: companyIdList.id
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
      tags:
        - UserManagement
    post:
      operationId: UserManagement_saveCompany
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementCompanyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementSaveCompanyRequest'
        required: true
      tags:
        - UserManagement
  /v1/companies/{companyId}:
    get:
      operationId: UserManagement_getCompany
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementCompanyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: companyName
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/companies/invitation_template:
    get:
      operationId: UserManagement_getInvitationTemplate
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementInvitationTemplateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/companies/name/{companyName}:
    get:
      operationId: UserManagement_getCompany2
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementCompanyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: companyName
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/companies/name/{companyName}/public:
    get:
      operationId: UserManagement_getCompanyPublicInfo
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementGetCompanyPublicInfoResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: companyName
          in: path
          required: true
          schema:
            type: string
      tags:
        - UserManagement
  /v1/companies/templates:
    get:
      operationId: UserManagement_getEmailTemplates
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementEmailTemplatesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
      tags:
        - UserManagement
    post:
      operationId: UserManagement_saveEmailTemplate
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementEmailTemplateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementSaveEmailTemplateRequest'
        required: true
      tags:
        - UserManagement
  /v1/companies/templates/{emailTemplateId}:
    get:
      operationId: UserManagement_getEmailTemplate
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementEmailTemplateResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: emailTemplateId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: params.name
          in: query
          required: false
          schema:
            type: string
        - name: params.companyId
          in: query
          required: false
          schema:
            type: string
        - name: params.languageCode
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/company/{companyId}/clients/count:
    get:
      operationId: UserManagement_countClients
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementCountClientsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: userId
          in: query
          required: false
          schema:
            type: string
        - name: statuses
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: contactSearchType
          in: query
          required: false
          schema:
            type: string
            enum:
              - ALL_CONTACT
              - PRIVATE_CONTACT
              - COMPANY_CONTACT
            default: ALL_CONTACT
      tags:
        - UserManagement
  /v1/company/{companyId}/users/count:
    get:
      operationId: UserManagement_countUsers
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementCountUsersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/delegations:
    get:
      operationId: UserManagement_GetDelegations
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementDelegationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: targetEntity
          in: query
          required: false
          schema:
            type: string
        - name: delegator
          in: query
          required: false
          schema:
            type: string
        - name: delegatee
          in: query
          required: false
          schema:
            type: string
        - name: status
          description: allow optional filter on status field
          in: query
          required: false
          schema:
            type: string
        - name: delegatedRoom
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
    post:
      operationId: UserManagement_createDelegations
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementDelegationsCreationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementCreateDelegationsRequest'
        required: true
      tags:
        - UserManagement
  /v1/delegations/{delegationId}:
    get:
      operationId: UserManagement_getDelegation
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementDelegationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: delegationId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/delegations/undo:
    post:
      operationId: UserManagement_UndoDelegations
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonEmptyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: targetEntity
          in: query
          required: false
          schema:
            type: string
        - name: delegator
          in: query
          required: false
          schema:
            type: string
        - name: delegatee
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/external-companies:
    post:
      summary: Add new external company by admin
      operationId: UserManagement_saveExternalCompany
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementExternalCompanyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementSaveExternalCompanyRequest'
        required: true
      tags:
        - UserManagement
  /v1/external-companies/{externalCompany.id}:
    put:
      summary: Update external company
      operationId: UserManagement_updateExternalCompany
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementExternalCompanyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: externalCompany.id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                requestIdentity:
                  $ref: '#/components/schemas/commonServiceRequestIdentity'
                externalCompany:
                  type: object
                  properties:
                    name:
                      type: string
                    logoUrl:
                      type: string
                    description:
                      type: string
                    creationTimestamp:
                      type: string
                    companyId:
                      type: string
                    parentId:
                      type: string
                    status:
                      $ref: '#/components/schemas/commonEntityStatus'
                    identity:
                      $ref: '#/components/schemas/commonFederatedIdentity'
                  title: Used to classify org structure of external parties
        required: true
      tags:
        - UserManagement
  /v1/external-companies/{externalCompanyId}:
    get:
      summary: Get single external company
      operationId: UserManagement_getExternalCompany
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementExternalCompanyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: externalCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
    delete:
      summary: Delete external company
      operationId: UserManagement_deleteExternalCompany
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonEmptyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: externalCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/external-companies/{externalCompanyId}/client-assignments:
    post:
      summary: Update client assignments to external companies, multiple updates in one request
      operationId: UserManagement_updateExternalCompanyClientAssignments
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementExternalCompanyClientAssignmentsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: externalCompanyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                requestIdentity:
                  $ref: '#/components/schemas/commonServiceRequestIdentity'
                clientIds:
                  type: array
                  items:
                    type: string
                clientProfileIds:
                  type: array
                  items:
                    type: string
        required: true
      tags:
        - UserManagement
  /v1/external-companies/{externalCompanyId}/clients/info/download:
    get:
      operationId: UserManagement_downloadExtCompanyClients
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementDownloadExtCompanyClientsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: externalCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/external-companies/{externalCompanyId}/user-assignments:
    post:
      summary: Update user assignments to external companies, multiple updates in one request
      operationId: UserManagement_updateExternalCompanyUserAssignments
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementExternalCompanyUserAssignmentsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: externalCompanyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                requestIdentity:
                  $ref: '#/components/schemas/commonServiceRequestIdentity'
                userIds:
                  type: array
                  items:
                    type: string
        required: true
      tags:
        - UserManagement
  /v1/external-companies/{externalCompanyId}/users/info/download:
    get:
      operationId: UserManagement_downloadExternalCompanyUsers
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementDownloadExternalCompanyUsersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: externalCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/external-companies/create-if-not-exist:
    post:
      operationId: UserManagement_getOrSaveExternalCompany
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementExternalCompanyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementGetOrSaveExternalCompanyRequest'
        required: true
      tags:
        - UserManagement
  /v1/external-companies/id/generate:
    get:
      summary: Generate external company Id
      operationId: UserManagement_generateExternalCompanyId
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementGenerateExternalCompanyIdResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/external-companies/name/{externalCompanyName}:
    get:
      operationId: UserManagement_getExternalCompanyByName
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementExternalCompanyByNameResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: externalCompanyName
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: exactMatch
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - UserManagement
  /v1/external-companies/ownership/{externalCompanyId}:
    get:
      summary: Returns a platform actor (user/client/bot) based on its ID
      operationId: UserManagement_getExternalCompanyOwnership
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementExternalCompanyOwnershipResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: externalCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/external-companies/search:
    post:
      summary: Search external companies
      operationId: UserManagement_searchExternalCompanies
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementSearchExternalCompaniesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        $ref: '#/components/requestBodies/usermanagementSearchRequest'
      tags:
        - UserManagement
  /v1/invite-user-templates/preview:
    post:
      operationId: UserManagement_previewUserInvitationEmail
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementUserInvitationEmailResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        $ref: '#/components/requestBodies/usermanagementSaveUserRequest'
      tags:
        - UserManagement
  /v1/org-units:
    get:
      operationId: UserManagement_getOrganizationalUnits
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementOrganizationalUnitsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: affinity
          in: query
          required: false
          schema:
            type: string
            enum:
              - AFFINITY_USER
              - AFFINITY_CLIENT
              - AFFINITY_BOT
            default: AFFINITY_USER
      tags:
        - UserManagement
    post:
      operationId: UserManagement_saveOrganizationalUnit
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementOrganizationalUnitResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: organizationalUnit.id
          in: query
          required: false
          schema:
            type: string
        - name: organizationalUnit.name
          in: query
          required: false
          schema:
            type: string
        - name: organizationalUnit.logoUrl
          in: query
          required: false
          schema:
            type: string
        - name: organizationalUnit.description
          in: query
          required: false
          schema:
            type: string
        - name: organizationalUnit.creationTimestamp
          in: query
          required: false
          schema:
            type: string
        - name: organizationalUnit.companyId
          in: query
          required: false
          schema:
            type: string
        - name: organizationalUnit.parentId
          in: query
          required: false
          schema:
            type: string
        - name: organizationalUnit.status
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - SUSPENDED
              - TERMINATED
              - NEW
              - DELETED
              - PENDING
              - DORMANT
              - BLOCKED
              - ARCHIVED
              - NON_VERIFIED
            default: ACTIVE
        - name: organizationalUnit.identity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNKNOWN
              - MICROSOFT
              - WECOM
              - TELEGRAM
              - WHATSAPP
              - SIGNAL
              - WECHAT_NATIVE
              - WECHAT_MINIAPP
              - LINE
              - SMS
              - WHATSAPP_BUSINESS
              - APPLE_ID
              - LEAPXPERT_FMOP
              - SLACK
              - SMS_NATIVE
              - VOICE
            default: UNKNOWN
        - name: organizationalUnit.identity.id
          description: federated Id in the external party e.g. NameID returned in SAML protocol
          in: query
          required: false
          schema:
            type: string
        - name: organizationalUnit.identity.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - AUTHENTICATION
              - MESSAGING
            default: AUTHENTICATION
        - name: organizationalUnit.identity.objectId
          description: database entity id
          in: query
          required: false
          schema:
            type: string
        - name: organizationalUnit.identity.companyId
          in: query
          required: false
          schema:
            type: string
        - name: organizationalUnit.affinity
          in: query
          required: false
          schema:
            type: string
            enum:
              - AFFINITY_USER
              - AFFINITY_CLIENT
              - AFFINITY_BOT
            default: AFFINITY_USER
        - name: organizationalUnit.clientViewAccess
          in: query
          required: false
          schema:
            type: string
            enum:
              - SAME
              - DOWNWARD
              - UPWARD
              - BOTH_DIRECTIONS
            default: SAME
      tags:
        - UserManagement
  /v1/org-units/{organizationalUnit.id}:
    put:
      operationId: UserManagement_updateOrganizationalUnit
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementOrganizationalUnitResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: organizationalUnit.id
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: organizationalUnit.name
          in: query
          required: false
          schema:
            type: string
        - name: organizationalUnit.logoUrl
          in: query
          required: false
          schema:
            type: string
        - name: organizationalUnit.description
          in: query
          required: false
          schema:
            type: string
        - name: organizationalUnit.creationTimestamp
          in: query
          required: false
          schema:
            type: string
        - name: organizationalUnit.companyId
          in: query
          required: false
          schema:
            type: string
        - name: organizationalUnit.parentId
          in: query
          required: false
          schema:
            type: string
        - name: organizationalUnit.status
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - SUSPENDED
              - TERMINATED
              - NEW
              - DELETED
              - PENDING
              - DORMANT
              - BLOCKED
              - ARCHIVED
              - NON_VERIFIED
            default: ACTIVE
        - name: organizationalUnit.identity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNKNOWN
              - MICROSOFT
              - WECOM
              - TELEGRAM
              - WHATSAPP
              - SIGNAL
              - WECHAT_NATIVE
              - WECHAT_MINIAPP
              - LINE
              - SMS
              - WHATSAPP_BUSINESS
              - APPLE_ID
              - LEAPXPERT_FMOP
              - SLACK
              - SMS_NATIVE
              - VOICE
            default: UNKNOWN
        - name: organizationalUnit.identity.id
          description: federated Id in the external party e.g. NameID returned in SAML protocol
          in: query
          required: false
          schema:
            type: string
        - name: organizationalUnit.identity.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - AUTHENTICATION
              - MESSAGING
            default: AUTHENTICATION
        - name: organizationalUnit.identity.objectId
          description: database entity id
          in: query
          required: false
          schema:
            type: string
        - name: organizationalUnit.identity.companyId
          in: query
          required: false
          schema:
            type: string
        - name: organizationalUnit.affinity
          in: query
          required: false
          schema:
            type: string
            enum:
              - AFFINITY_USER
              - AFFINITY_CLIENT
              - AFFINITY_BOT
            default: AFFINITY_USER
        - name: organizationalUnit.clientViewAccess
          in: query
          required: false
          schema:
            type: string
            enum:
              - SAME
              - DOWNWARD
              - UPWARD
              - BOTH_DIRECTIONS
            default: SAME
      tags:
        - UserManagement
  /v1/org-units/{organizationalUnitId}:
    get:
      operationId: UserManagement_getOrganizationalUnit
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementOrganizationalUnitResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: organizationalUnitId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/org-units/{organizationalUnitId}/users/download:
    get:
      operationId: UserManagement_downloadOrgUnitUsers
      responses:
        '200':
          description: A successful response.(streaming responses)
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/usermanagementFile'
                  error:
                    $ref: '#/components/schemas/rpcStatus'
                title: Stream result of usermanagementFile
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: organizationalUnitId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/org-units/flat:
    get:
      operationId: UserManagement_getFlatOrganizationalUnits
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementGetFlatOrganizationalUnitsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: roleId
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/org-units/name/{organizationUnitName}:
    get:
      operationId: UserManagement_getOrganizationalUnitsByName
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementOrganizationalUnitsByNameResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: organizationUnitName
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: exactMatch
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - UserManagement
  /v1/org-units/userId/{userId}:
    get:
      operationId: UserManagement_getOrganizationalUnitsByUserId
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementGetOrganizationalUnitsByUserIdResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: filter
          in: query
          required: false
          schema:
            type: string
            enum:
              - NONE
              - CLIENT_VIEW_ACCESS
            default: NONE
      tags:
        - UserManagement
  /v1/permissions:
    get:
      operationId: UserManagement_getPermissions
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementPermissionsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: service
          in: query
          required: false
          schema:
            type: string
        - name: type
          description: |2-
             - FUNCTIONAL: Functional permissions (communication actions)
             - ADMINISTRATIVE: Administive actions, platform management
             - USER_CLIENT: Role defining user-client relationship permissions
          in: query
          required: false
          schema:
            type: string
            enum:
              - FUNCTIONAL
              - ADMINISTRATIVE
              - USER_CLIENT
            default: FUNCTIONAL
      tags:
        - UserManagement
    delete:
      operationId: UserManagement_deletePermission
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonEmptyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementDeletePermissionRequest'
        required: true
      tags:
        - UserManagement
    post:
      operationId: UserManagement_savePermission
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementPermissionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementSavePermissionRequest'
        required: true
      tags:
        - UserManagement
  /v1/permissions/{permissionIdentifier}:
    get:
      summary: Method to locate a single permission on the platform
      operationId: UserManagement_getPermission
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementPermissionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: permissionIdentifier
          description: either by permissionId or permissionName
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum:
              - PERMISSION_ID
              - PERMISSION_NAME
            default: PERMISSION_ID
      tags:
        - UserManagement
  /v1/permissions/client/evaluate:
    post:
      summary: Evaluate if permissions between user and client includes the permissions listed in the request
      operationId: UserManagement_evaluateClientPermission
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementEvaluatePermissionsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementEvaluateClientPermissionsRequest'
        required: true
      tags:
        - UserManagement
  /v1/permissions/evaluate:
    post:
      summary: Evaluate is the user described in serviceIdentity has the permissions listed in the request
      operationId: UserManagement_evaluatePermission
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementEvaluatePermissionsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementEvaluatePermissionsRequest'
        required: true
      tags:
        - UserManagement
  /v1/permissions/list:
    post:
      operationId: UserManagement_bulkGetPermissions
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementPermissionsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: ids
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      tags:
        - UserManagement
  /v1/provisional/counts:
    get:
      summary: Method to get counts when it comes to provisioned entities on a company level
      operationId: UserManagement_getCompanyProvisionalCounts
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementCompanyProvisionalCountsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: activatedStatuses
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - ACTIVE
                - SUSPENDED
                - TERMINATED
                - NEW
                - DELETED
                - PENDING
                - DORMANT
                - BLOCKED
                - ARCHIVED
                - NON_VERIFIED
      tags:
        - UserManagement
  /v1/roles:
    get:
      operationId: UserManagement_getRoles
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementRolesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: roleType
          description: |2-
             - FUNCTIONAL: Functional permissions (communication actions)
             - ADMINISTRATIVE: Administive actions, platform management
             - USER_CLIENT: Role defining user-client relationship permissions
          in: query
          required: false
          schema:
            type: string
            enum:
              - FUNCTIONAL
              - ADMINISTRATIVE
              - USER_CLIENT
            default: FUNCTIONAL
      tags:
        - UserManagement
    post:
      operationId: UserManagement_saveRole
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementRoleResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: role.id
          in: query
          required: false
          schema:
            type: string
        - name: role.name
          in: query
          required: false
          schema:
            type: string
        - name: role.creationTimestamp
          in: query
          required: false
          schema:
            type: string
        - name: role.lastUpdateTimestamp
          in: query
          required: false
          schema:
            type: string
        - name: role.custom
          in: query
          required: false
          schema:
            type: boolean
        - name: role.companyId
          in: query
          required: false
          schema:
            type: string
        - name: role.type
          description: |2-
             - FUNCTIONAL: Functional permissions (communication actions)
             - ADMINISTRATIVE: Administive actions, platform management
             - USER_CLIENT: Role defining user-client relationship permissions
          in: query
          required: false
          schema:
            type: string
            enum:
              - FUNCTIONAL
              - ADMINISTRATIVE
              - USER_CLIENT
            default: FUNCTIONAL
        - name: role.affinity
          in: query
          required: false
          schema:
            type: string
            enum:
              - AFFINITY_USER
              - AFFINITY_CLIENT
              - AFFINITY_BOT
            default: AFFINITY_USER
        - name: role.permissionIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: role.description
          in: query
          required: false
          schema:
            type: string
        - name: role.identity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNKNOWN
              - MICROSOFT
              - WECOM
              - TELEGRAM
              - WHATSAPP
              - SIGNAL
              - WECHAT_NATIVE
              - WECHAT_MINIAPP
              - LINE
              - SMS
              - WHATSAPP_BUSINESS
              - APPLE_ID
              - LEAPXPERT_FMOP
              - SLACK
              - SMS_NATIVE
              - VOICE
            default: UNKNOWN
        - name: role.identity.id
          description: federated Id in the external party e.g. NameID returned in SAML protocol
          in: query
          required: false
          schema:
            type: string
        - name: role.identity.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - AUTHENTICATION
              - MESSAGING
            default: AUTHENTICATION
        - name: role.identity.objectId
          description: database entity id
          in: query
          required: false
          schema:
            type: string
        - name: role.identity.companyId
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/roles/{role.id}:
    put:
      operationId: UserManagement_updateRole
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementRoleResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: role.id
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: role.name
          in: query
          required: false
          schema:
            type: string
        - name: role.creationTimestamp
          in: query
          required: false
          schema:
            type: string
        - name: role.lastUpdateTimestamp
          in: query
          required: false
          schema:
            type: string
        - name: role.custom
          in: query
          required: false
          schema:
            type: boolean
        - name: role.companyId
          in: query
          required: false
          schema:
            type: string
        - name: role.type
          description: |2-
             - FUNCTIONAL: Functional permissions (communication actions)
             - ADMINISTRATIVE: Administive actions, platform management
             - USER_CLIENT: Role defining user-client relationship permissions
          in: query
          required: false
          schema:
            type: string
            enum:
              - FUNCTIONAL
              - ADMINISTRATIVE
              - USER_CLIENT
            default: FUNCTIONAL
        - name: role.affinity
          in: query
          required: false
          schema:
            type: string
            enum:
              - AFFINITY_USER
              - AFFINITY_CLIENT
              - AFFINITY_BOT
            default: AFFINITY_USER
        - name: role.permissionIds
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: role.description
          in: query
          required: false
          schema:
            type: string
        - name: role.identity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNKNOWN
              - MICROSOFT
              - WECOM
              - TELEGRAM
              - WHATSAPP
              - SIGNAL
              - WECHAT_NATIVE
              - WECHAT_MINIAPP
              - LINE
              - SMS
              - WHATSAPP_BUSINESS
              - APPLE_ID
              - LEAPXPERT_FMOP
              - SLACK
              - SMS_NATIVE
              - VOICE
            default: UNKNOWN
        - name: role.identity.id
          description: federated Id in the external party e.g. NameID returned in SAML protocol
          in: query
          required: false
          schema:
            type: string
        - name: role.identity.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - AUTHENTICATION
              - MESSAGING
            default: AUTHENTICATION
        - name: role.identity.objectId
          description: database entity id
          in: query
          required: false
          schema:
            type: string
        - name: role.identity.companyId
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/roles/{roleId}:
    delete:
      operationId: UserManagement_deleteRole
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonEmptyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: roleId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/roles/{roleIdentifier}:
    get:
      summary: Method to locate a single role on the platform
      operationId: UserManagement_getRole
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementRoleResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: roleIdentifier
          description: either by roleId or roleName
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum:
              - ROLE_ID
              - ROLE_NAME
            default: ROLE_ID
      tags:
        - UserManagement
  /v1/saml-mappings:
    get:
      operationId: UserManagement_getSamlMapping
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementSamlMappingResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
    post:
      operationId: UserManagement_saveSamlMapping
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementSamlMappingResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementSaveSamlMappingRequest'
        required: true
      tags:
        - UserManagement
  /v1/saml-mappings/metadata:
    get:
      operationId: UserManagement_getSamlMappingMetadata
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementSamlMappingMetadataResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/user-groups:
    get:
      operationId: UserManagement_getUserGroups
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementGetUserGroupsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: idList.id
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      tags:
        - UserManagement
    post:
      operationId: UserManagement_createUserGroup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementUserGroupResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementUserGroupRequest'
        required: true
      tags:
        - UserManagement
  /v1/user-groups/{userGroup.id}:
    put:
      operationId: UserManagement_updateUserGroup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementUserGroupResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: userGroup.id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                requestIdentity:
                  $ref: '#/components/schemas/commonServiceRequestIdentity'
                userGroup:
                  type: object
                  properties:
                    companyId:
                      type: string
                    name:
                      type: string
                    description:
                      type: string
                    externalIdentities:
                      type: array
                      items:
                        $ref: '#/components/schemas/commonFederatedIdentity'
                    creationTimestamp:
                      type: string
                    lastUpdateTimestamp:
                      type: string
        required: true
      tags:
        - UserManagement
  /v1/user-groups/{userGroupId}:
    delete:
      operationId: UserManagement_deleteUserGroup
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonEmptyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: userGroupId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/user-groups/check-name:
    post:
      operationId: UserManagement_checkUserGroupName
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementCheckUserGroupNameResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementCheckUserGroupNameRequest'
        required: true
      tags:
        - UserManagement
  /v1/user-groups/list:
    post:
      operationId: UserManagement_getUserGroups2
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementGetUserGroupsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementGetUserGroupsRequest'
        required: true
      tags:
        - UserManagement
  /v1/user-groups/user-assignments:
    put:
      operationId: UserManagement_assignUserGroupToUsers
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonEmptyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementAssignUGToUsersRequest'
        required: true
      tags:
        - UserManagement
  /v1/user-public/{userId}:
    get:
      operationId: UserManagement_getUserInPublicRequest
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementUserPublicResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: userType
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - CLIENT
              - BOT
            default: USER
      tags:
        - UserManagement
  /v1/user/{userId}/clients/count:
    get:
      operationId: UserManagement_countClients2
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementCountClientsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: statuses
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: contactSearchType
          in: query
          required: false
          schema:
            type: string
            enum:
              - ALL_CONTACT
              - PRIVATE_CONTACT
              - COMPANY_CONTACT
            default: ALL_CONTACT
      tags:
        - UserManagement
  /v1/user/bot-message/permission:
    post:
      operationId: UserManagement_checkBotMessageSendPermission
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementCheckBotMessageSendPermissionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementCheckBotMessageSendPermissionRequest'
        required: true
      tags:
        - UserManagement
  /v1/users:
    get:
      operationId: UserManagement_getUsers
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementUsersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: userIdList.id
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: organizationalUnitId
          in: query
          required: false
          schema:
            type: string
        - name: notInOrganizationalUnit
          in: query
          required: false
          schema:
            type: boolean
        - name: assignedClientId
          in: query
          required: false
          schema:
            type: string
        - name: parentOrganizationalUnitId
          in: query
          required: false
          schema:
            type: string
        - name: externalCompanyId
          in: query
          required: false
          schema:
            type: string
        - name: roleId
          in: query
          required: false
          schema:
            type: string
        - name: adminAdditionalParams.companyId
          in: query
          required: false
          schema:
            type: string
        - name: adminAdditionalParams.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: statuses
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: isFromApiServer
          description: temporary flag to indicate request comes from api-server, i.e.RBAC should not be applied
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - UserManagement
    post:
      operationId: UserManagement_saveUser
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementUserResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        $ref: '#/components/requestBodies/usermanagementSaveUserRequest'
      tags:
        - UserManagement
  /v1/users/{userId}/client-permissions/{clientId}:
    get:
      summary: Method to get list of permissions of user-client relationship
      operationId: UserManagement_getClientPermissions
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementClientPermissionsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: clientId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/users/{userId}/contacts/{type}:
    get:
      operationId: UserManagement_getContactList
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementContactListResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum:
              - CONTACT_USER
              - CONTACT_CLIENT
              - CONTACT_NVC
              - CONTACT_CLIENT_PROFILE
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/users/{userId}/contacts/{type}/{contactId}:
    delete:
      operationId: UserManagement_deleteFromContactList
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonEmptyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum:
              - CONTACT_USER
              - CONTACT_CLIENT
              - CONTACT_NVC
              - CONTACT_CLIENT_PROFILE
        - name: contactId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/users/{userId}/roles:
    get:
      summary: Get all roles of a specific user
      operationId: UserManagement_getUserRoles
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementRolesAssignmentResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/users/{userIdentifier.userId}:
    get:
      operationId: UserManagement_getUser
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementUserResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: userIdentifier.userId
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: email
          in: query
          required: false
          schema:
            type: string
        - name: phoneNumber
          in: query
          required: false
          schema:
            type: string
        - name: invitationToken
          in: query
          required: false
          schema:
            type: string
        - name: federatedIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNKNOWN
              - MICROSOFT
              - WECOM
              - TELEGRAM
              - WHATSAPP
              - SIGNAL
              - WECHAT_NATIVE
              - WECHAT_MINIAPP
              - LINE
              - SMS
              - WHATSAPP_BUSINESS
              - APPLE_ID
              - LEAPXPERT_FMOP
              - SLACK
              - SMS_NATIVE
              - VOICE
            default: UNKNOWN
        - name: federatedIdentity.id
          description: federated Id in the external party e.g. NameID returned in SAML protocol
          in: query
          required: false
          schema:
            type: string
        - name: federatedIdentity.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - AUTHENTICATION
              - MESSAGING
            default: AUTHENTICATION
        - name: federatedIdentity.objectId
          description: database entity id
          in: query
          required: false
          schema:
            type: string
        - name: federatedIdentity.companyId
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/users/check-email/{email}:
    get:
      operationId: UserManagement_isEmailAvailable
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementEmailAvailableResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/users/check-name/{name}:
    get:
      operationId: UserManagement_isUserNameAvailable
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementNameAvailableResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/users/email/{email}:
    get:
      operationId: UserManagement_getUser2
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementUserResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: phoneNumber
          in: query
          required: false
          schema:
            type: string
        - name: invitationToken
          in: query
          required: false
          schema:
            type: string
        - name: federatedIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNKNOWN
              - MICROSOFT
              - WECOM
              - TELEGRAM
              - WHATSAPP
              - SIGNAL
              - WECHAT_NATIVE
              - WECHAT_MINIAPP
              - LINE
              - SMS
              - WHATSAPP_BUSINESS
              - APPLE_ID
              - LEAPXPERT_FMOP
              - SLACK
              - SMS_NATIVE
              - VOICE
            default: UNKNOWN
        - name: federatedIdentity.id
          description: federated Id in the external party e.g. NameID returned in SAML protocol
          in: query
          required: false
          schema:
            type: string
        - name: federatedIdentity.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - AUTHENTICATION
              - MESSAGING
            default: AUTHENTICATION
        - name: federatedIdentity.objectId
          description: database entity id
          in: query
          required: false
          schema:
            type: string
        - name: federatedIdentity.companyId
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/users/federated-identity/{federatedIdentity.type}/{federatedIdentity.id}:
    get:
      operationId: UserManagement_getUser4
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementUserResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: federatedIdentity.type
          in: path
          required: true
          schema:
            type: string
            enum:
              - UNKNOWN
              - MICROSOFT
              - WECOM
              - TELEGRAM
              - WHATSAPP
              - SIGNAL
              - WECHAT_NATIVE
              - WECHAT_MINIAPP
              - LINE
              - SMS
              - WHATSAPP_BUSINESS
              - APPLE_ID
              - LEAPXPERT_FMOP
              - SLACK
              - SMS_NATIVE
              - VOICE
        - name: federatedIdentity.id
          description: federated Id in the external party e.g. NameID returned in SAML protocol
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: email
          in: query
          required: false
          schema:
            type: string
        - name: phoneNumber
          in: query
          required: false
          schema:
            type: string
        - name: invitationToken
          in: query
          required: false
          schema:
            type: string
        - name: federatedIdentity.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - AUTHENTICATION
              - MESSAGING
            default: AUTHENTICATION
        - name: federatedIdentity.objectId
          description: database entity id
          in: query
          required: false
          schema:
            type: string
        - name: federatedIdentity.companyId
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/users/list:
    post:
      operationId: UserManagement_getUsers2
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementUsersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementGetUsersRequest'
        required: true
      tags:
        - UserManagement
  /v1/users/my-profile:
    get:
      operationId: UserManagement_getUserProfile
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementUserResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/users/org-unit:
    put:
      summary: 'TODO: use bulk PATCH update on partial user fields, when FE supports PATCH and BE supports per-field permission check'
      operationId: UserManagement_updateUsersOrganizationalUnit
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonEmptyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementUpdateUsersOrganizationalUnitRequest'
        required: true
      tags:
        - UserManagement
  /v1/users/permissions:
    get:
      summary: Get all permissions of a specific user
      operationId: UserManagement_getUserPermissions
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementPermissionsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: roleType
          description: |2-
             - FUNCTIONAL: Functional permissions (communication actions)
             - ADMINISTRATIVE: Administive actions, platform management
             - USER_CLIENT: Role defining user-client relationship permissions
          in: query
          required: false
          schema:
            type: string
            enum:
              - FUNCTIONAL
              - ADMINISTRATIVE
              - USER_CLIENT
            default: FUNCTIONAL
        - name: onlySpecifiedRoleType
          description: if false, role type setting is ignored
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - UserManagement
  /v1/users/phone-number:
    post:
      operationId: UserManagement_updateUserPhoneNumber
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonEmptyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementUpdatePhoneNumberRequest'
        required: true
      tags:
        - UserManagement
  /v1/users/phone-number-mfa:
    post:
      operationId: UserManagement_updateUserPhoneNumberMfa
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementUpdatePhoneNumberMfaResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementUpdatePhoneNumberMfaRequest'
        required: true
      tags:
        - UserManagement
  /v1/users/phone-number/{phoneNumber_1}:
    get:
      operationId: UserManagement_getUserByPhoneNumber
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementUsersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: phoneNumber_1
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/users/phone-number/{phoneNumber}:
    get:
      operationId: UserManagement_getUser3
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementUserResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: phoneNumber
          in: path
          required: true
          schema:
            type: string
        - name: requestIdentity.userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: requestIdentity.userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.userAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.type
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceIdentifier.id
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.serviceAccessToken
          in: query
          required: false
          schema:
            type: string
        - name: requestIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - USER
              - SERVICE
              - USER_PUBLIC
              - API_KEY
            default: USER
        - name: requestIdentity.deviceIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.role
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - EXPERT
              - RESELLER
              - SUPERADMIN
              - SYSTEM
              - OWNER
              - ADMIN
              - BOT
              - FEDERATED_IDENTITY
              - GATEWAY
            default: CLIENT
        - name: userIdentifier.userAtCompany.name
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.userAtCompany.company
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.userAtCompany.id
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.userAtCompany.companyId
          in: query
          required: false
          schema:
            type: string
        - name: userIdentifier.userId
          in: query
          required: false
          schema:
            type: string
        - name: email
          in: query
          required: false
          schema:
            type: string
        - name: invitationToken
          in: query
          required: false
          schema:
            type: string
        - name: federatedIdentity.type
          in: query
          required: false
          schema:
            type: string
            enum:
              - UNKNOWN
              - MICROSOFT
              - WECOM
              - TELEGRAM
              - WHATSAPP
              - SIGNAL
              - WECHAT_NATIVE
              - WECHAT_MINIAPP
              - LINE
              - SMS
              - WHATSAPP_BUSINESS
              - APPLE_ID
              - LEAPXPERT_FMOP
              - SLACK
              - SMS_NATIVE
              - VOICE
            default: UNKNOWN
        - name: federatedIdentity.id
          description: federated Id in the external party e.g. NameID returned in SAML protocol
          in: query
          required: false
          schema:
            type: string
        - name: federatedIdentity.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - AUTHENTICATION
              - MESSAGING
            default: AUTHENTICATION
        - name: federatedIdentity.objectId
          description: database entity id
          in: query
          required: false
          schema:
            type: string
        - name: federatedIdentity.companyId
          in: query
          required: false
          schema:
            type: string
      tags:
        - UserManagement
  /v1/users/roles:
    put:
      operationId: UserManagement_assignRoleToUsers
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonEmptyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementAssignRoleToUsersRequest'
        required: true
      tags:
        - UserManagement
  /v1/users/roles/unassign:
    post:
      operationId: UserManagement_unassignUserRoles
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonEmptyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementUnassignUserRolesRequest'
        required: true
      tags:
        - UserManagement
  /v1/users/search:
    post:
      operationId: UserManagement_searchUsers
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementSearchUsersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        $ref: '#/components/requestBodies/usermanagementSearchRequest'
      tags:
        - UserManagement
  /v1/users/status:
    put:
      operationId: UserManagement_updateUsersStatus
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usermanagementUpdateUsersStatusResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagementUpdateUsersStatusRequest'
        required: true
      tags:
        - UserManagement
  /v1/users/update-password:
    post:
      operationId: UserManagement_updateUserPassword
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonEmptyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        $ref: '#/components/requestBodies/usermanagementUpdatePasswordRequest'
      tags:
        - UserManagement
security:
  - api-key: []
    bearer-jwt: []
components:
  requestBodies:
    usermanagementUpdatePasswordRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/usermanagementUpdatePasswordRequest'
      required: true
    usermanagementBot:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/usermanagementBot'
      required: true
    usermanagementSaveUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/usermanagementSaveUserRequest'
      required: true
    usermanagementSaveClientRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/usermanagementSaveClientRequest'
      required: true
    usermanagementSearchRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/usermanagementSearchRequest'
      required: true
  securitySchemes:
    api-key:
      type: apiKey
      name: x-api-key
      in: header
    bearer-jwt:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    BulkImportDetailImportStatus:
      type: string
      enum:
        - SUCCESSFUL
        - FAILED
      default: SUCCESSFUL
    commonAssignmentCondition:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/commonConditionType'
        operator:
          $ref: '#/components/schemas/commonConditionOperator'
        value:
          type: string
        field:
          type: string
      title: Different assigment conditions, defining how role applies and its scope
    commonAttribute:
      type: object
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/commonAttributeType'
        value:
          type: string
    commonAttributeType:
      type: string
      enum:
        - ID
        - STRING
        - NUMBER
        - DATE
        - BOOLEAN
        - JSON_MAP
      default: ID
    commonClientViewAccess:
      type: string
      enum:
        - SAME
        - DOWNWARD
        - UPWARD
        - BOTH_DIRECTIONS
      default: SAME
    commonConditionOperator:
      type: string
      enum:
        - IS
        - IS_NOT
        - STARTS_WITH
        - ENDS_WITH
      default: IS
      title: Types of operators supported by the platform
    commonConditionType:
      type: string
      enum:
        - RESOURCE_TYPE
        - RESOURCE_NAME
        - RESOURCE_ID
        - RESOURCE_PROTO_PATH
      default: RESOURCE_TYPE
      title: Types of conditions supported on the platform
    commonConditionsMatchingApproach:
      type: string
      enum:
        - AND
        - OR
      default: AND
    commonDataSegregationCondition:
      type: object
      properties:
        operator:
          $ref: '#/components/schemas/commonConditionOperator'
        field:
          $ref: '#/components/schemas/commonSegregationConditionAttribute'
        value:
          type: string
        federatedIdentityAttributeName:
          type: string
          title: Only applicable when field is FEDERATED_IDENTITY_ATTRIBUTE
    commonDataSegregationRule:
      type: object
      properties:
        matchingApproach:
          $ref: '#/components/schemas/commonConditionsMatchingApproach'
        affinity:
          $ref: '#/components/schemas/commonEntityAffinity'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/commonDataSegregationCondition'
    commonEmptyResponse:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/commonServiceError'
    commonEnableApiKey:
      type: object
    commonEntityAffinity:
      type: string
      enum:
        - AFFINITY_USER
        - AFFINITY_CLIENT
        - AFFINITY_BOT
      default: AFFINITY_USER
    commonEntityStatus:
      type: string
      enum:
        - ACTIVE
        - SUSPENDED
        - TERMINATED
        - NEW
        - DELETED
        - PENDING
        - DORMANT
        - BLOCKED
        - ARCHIVED
        - NON_VERIFIED
      default: ACTIVE
    commonExternalCompany:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        logoUrl:
          type: string
        description:
          type: string
        creationTimestamp:
          type: string
        companyId:
          type: string
        parentId:
          type: string
        status:
          $ref: '#/components/schemas/commonEntityStatus'
        identity:
          $ref: '#/components/schemas/commonFederatedIdentity'
      title: Used to classify org structure of external parties
    commonFederatedIdentity:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/commonIdentityProviderType'
        id:
          type: string
          title: federated Id in the external party e.g. NameID returned in SAML protocol
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/commonMultiValueAttribute'
          description: Used to list SAML attributes for MICROSOFT identity and potentially others.
        scope:
          $ref: '#/components/schemas/commonIdentityScope'
        objectId:
          type: string
          title: database entity id
        companyId:
          type: string
      title: Scope of federated identity, denotes repsentation on a federated platform
    commonFile:
      type: object
      properties:
        content:
          type: string
          format: byte
    commonIdList:
      type: object
      properties:
        id:
          type: array
          items:
            type: string
    commonIdentifierType:
      type: string
      enum:
        - ROLE_ID
        - ROLE_NAME
      default: ROLE_ID
    commonIdentityProviderType:
      type: string
      enum:
        - UNKNOWN
        - MICROSOFT
        - WECOM
        - TELEGRAM
        - WHATSAPP
        - SIGNAL
        - WECHAT_NATIVE
        - WECHAT_MINIAPP
        - LINE
        - SMS
        - WHATSAPP_BUSINESS
        - APPLE_ID
        - LEAPXPERT_FMOP
        - SLACK
        - SMS_NATIVE
        - VOICE
      default: UNKNOWN
    commonIdentityScope:
      type: string
      enum:
        - AUTHENTICATION
        - MESSAGING
      default: AUTHENTICATION
      title: Scope of federated identity, denotes how and when the platform is using it
    commonInheritanceDirection:
      type: string
      enum:
        - SAME_INHERITANCE
        - DOWNWARD_INHERITANCE
        - UPWARD_INHERITANCE
        - BOTH_DIRECTIONS_INHERITANCE
      default: SAME_INHERITANCE
    commonMultiValueAttribute:
      type: object
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/commonAttributeType'
        values:
          type: array
          items:
            type: string
      title: Like attribute but support multiple values
    commonOrderBy:
      type: string
      enum:
        - ASC
        - DESC
      default: ASC
    commonPermission:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        creationTimestamp:
          type: string
        lastUpdateTimestamp:
          type: string
        description:
          type: string
        type:
          $ref: '#/components/schemas/commonRoleType'
        service:
          type: string
    commonPermissionIdentifierType:
      type: string
      enum:
        - PERMISSION_ID
        - PERMISSION_NAME
      default: PERMISSION_ID
    commonPermissionList:
      type: object
      properties:
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/commonPermission'
    commonPersona:
      type: object
      properties:
        email:
          type: string
        mobilePhoneNumber:
          type: string
        officePhoneNumber:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        language:
          type: string
        profileImageUrl:
          type: string
        country:
          type: string
        communicationIdentifier:
          type: string
          title: See security document https://leap-expert.atlassian.net/wiki/spaces/DOC/pages/1169951/Security
        jobTitle:
          type: string
        timezone:
          type: string
        linkedIn:
          type: string
        biography:
          type: string
        displayName:
          type: string
        department:
          type: string
        knowAs:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/commonAttribute'
    commonPlatformRoles:
      type: object
      properties:
        roleAssignments:
          type: array
          items:
            $ref: '#/components/schemas/commonRoleAssignment'
        inheritanceStoppers:
          type: object
          additionalProperties:
            type: boolean
          title: |-
            Map of RoleType and bool - if true for a specific role type, such roles will not be inherited at that level
            Not using enum as key since not allowed in protobuff syntax
        inheritanceRules:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/commonInheritanceDirection'
    commonResponsePagination:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        numberOfPages:
          type: integer
          format: int32
    commonRoleAssignment:
      type: object
      properties:
        roleId:
          type: string
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/commonAssignmentCondition'
        matchingApproach:
          $ref: '#/components/schemas/commonConditionsMatchingApproach'
      title: Parameters of role assignment to specific entity
    commonRoleType:
      type: string
      enum:
        - FUNCTIONAL
        - ADMINISTRATIVE
        - USER_CLIENT
      default: FUNCTIONAL
      title: |-
        - FUNCTIONAL: Functional permissions (communication actions)
         - ADMINISTRATIVE: Administive actions, platform management
         - USER_CLIENT: Role defining user-client relationship permissions
    commonSearchFilters:
      type: object
      properties:
        key:
          type: string
        type:
          $ref: '#/components/schemas/commonAttributeType'
        value:
          type: string
    commonSegregationConditionAttribute:
      type: string
      enum:
        - COUNTRY
        - ORGANIZATIONAL_UNIT_ID
        - LANGUAGE
        - TIMEZONE
        - EXTERNAL_COMPANY_ID
        - STATUS
        - JOB_TITLE
        - FEDERATED_IDENTITY_ATTRIBUTE
      default: COUNTRY
    commonServiceError:
      type: object
      properties:
        errorCode:
          type: integer
          format: int32
        errorMessage:
          type: string
        service:
          type: string
        errorDetails:
          type: array
          items:
            type: string
      title: Generic error. Error codes and meaning please see in each service documentation
    commonServiceIdentifier:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
    commonServiceRequestIdentity:
      type: object
      properties:
        userIdentifier:
          $ref: '#/components/schemas/commonUserIdentifier'
        userAccessToken:
          type: string
        serviceIdentifier:
          $ref: '#/components/schemas/commonServiceIdentifier'
        serviceAccessToken:
          type: string
        type:
          $ref: '#/components/schemas/commonServiceRequestType'
        deviceIdentifier:
          type: string
    commonServiceRequestType:
      type: string
      enum:
        - USER
        - SERVICE
        - USER_PUBLIC
        - API_KEY
      default: USER
    commonTag:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    commonTargetEntity:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
        name:
          type: string
      description: |-
        Denotes an entity that operation is being performed on.
        Used in authorization flows on the platform.
    commonUserAssignment:
      type: object
      properties:
        roleId:
          type: string
        targetEntity:
          $ref: '#/components/schemas/commonTargetEntity'
      title: Representation on a single assignment a client to a user
    commonUserAtCompany:
      type: object
      properties:
        name:
          type: string
        company:
          type: string
        id:
          type: string
        companyId:
          type: string
    commonUserGroup:
      type: object
      properties:
        id:
          type: string
        companyId:
          type: string
        name:
          type: string
        description:
          type: string
        externalIdentities:
          type: array
          items:
            $ref: '#/components/schemas/commonFederatedIdentity'
        creationTimestamp:
          type: string
        lastUpdateTimestamp:
          type: string
    commonUserIdentifier:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/commonUserRole'
        userAtCompany:
          $ref: '#/components/schemas/commonUserAtCompany'
        userId:
          type: string
      title: Message used to identify users of a system
    commonUserRole:
      type: string
      enum:
        - CLIENT
        - EXPERT
        - RESELLER
        - SUPERADMIN
        - SYSTEM
        - OWNER
        - ADMIN
        - BOT
        - FEDERATED_IDENTITY
        - GATEWAY
      default: CLIENT
    protobufAny:
      type: object
      properties:
        '@type':
          type: string
      additionalProperties: {}
    rpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/protobufAny'
    usermanagementAcceptedTermsOfUseLog:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        versionId:
          type: string
        versionNumber:
          type: integer
          format: int32
        language:
          type: string
        device:
          $ref: '#/components/schemas/usermanagementDevice'
    usermanagementActorResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        client:
          $ref: '#/components/schemas/usermanagementClient'
        user:
          $ref: '#/components/schemas/usermanagementUser'
        bot:
          $ref: '#/components/schemas/usermanagementBot'
        federatedIdentity:
          $ref: '#/components/schemas/commonFederatedIdentity'
    usermanagementAddSharedClientToContactRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        clientId:
          type: string
    usermanagementAdminAdditionalParams:
      type: object
      properties:
        companyId:
          type: string
        role:
          $ref: '#/components/schemas/commonUserRole'
    usermanagementApplication:
      type: object
      properties:
        id:
          type: string
        bundleIdentifier:
          type: string
        platform:
          type: string
        status:
          $ref: '#/components/schemas/commonEntityStatus'
    usermanagementApplicationOnDevice:
      type: object
      properties:
        application:
          $ref: '#/components/schemas/usermanagementApplication'
        applicationVersion:
          type: string
    usermanagementAssignRoleToUsersRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        users:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementUserRolesMapping'
    usermanagementAssignUGToUsersRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        users:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementUserGroupAssignment'
    usermanagementBaseUser:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/usermanagementUserType'
        companyId:
          type: string
        displayName:
          type: string
        avatarUrl:
          type: string
        status:
          $ref: '#/components/schemas/commonEntityStatus'
        creationTimestamp:
          type: string
        lastUpdateTimestamp:
          type: string
        username:
          type: string
          title: Raw username
        persona:
          $ref: '#/components/schemas/commonPersona'
    usermanagementBaseUserIdList:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
    usermanagementBaseUserNumberMapping:
      type: object
      properties:
        phoneNumber:
          type: string
        user:
          $ref: '#/components/schemas/usermanagementBaseUser'
    usermanagementBaseUserResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        user:
          $ref: '#/components/schemas/usermanagementBaseUser'
    usermanagementBaseUsersResponse:
      type: object
      properties:
        success:
          type: boolean
        users:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementBaseUser'
        pagination:
          $ref: '#/components/schemas/commonResponsePagination'
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementBot:
      type: object
      properties:
        id:
          type: string
        displayName:
          type: string
        avatarUrl:
          type: string
        description:
          type: string
        creationTimestamp:
          type: string
        lastUpdateTimestamp:
          type: string
        status:
          $ref: '#/components/schemas/commonEntityStatus'
        companyId:
          type: string
        triggeredBy:
          $ref: '#/components/schemas/usermanagementTriggeredBy'
        autoEnroll:
          type: array
          items:
            type: string
        type:
          $ref: '#/components/schemas/usermanagementBotType'
        aliasNames:
          type: array
          items:
            type: string
        organizationalUnitIds:
          type: array
          items:
            type: string
        requireCounterpartyCode:
          type: boolean
        multiBotsHandling:
          $ref: '#/components/schemas/usermanagementMultiBotsHandling'
    usermanagementBotMessageSendPermission:
      type: object
      properties:
        botId:
          type: string
        hasPermission:
          type: boolean
    usermanagementBotResponse:
      type: object
      properties:
        success:
          type: boolean
        bot:
          $ref: '#/components/schemas/usermanagementBot'
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementBotType:
      type: string
      enum:
        - UNKNOWN
        - API_KEY
        - INBOUND
        - WORKFLOW
        - MENTIONED
      default: UNKNOWN
    usermanagementBotsResponse:
      type: object
      properties:
        bots:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementBot'
        pagination:
          $ref: '#/components/schemas/commonResponsePagination'
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementBulkImport:
      type: object
      properties:
        id:
          type: string
        companyId:
          type: string
        userId:
          type: string
        fileUrl:
          type: string
        status:
          type: string
        startTime:
          type: string
        endTime:
          type: string
        total:
          type: integer
          format: int32
        success:
          type: integer
          format: int32
        failure:
          type: integer
          format: int32
        error:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementBulkImportDetail'
        filename:
          type: string
        type:
          $ref: '#/components/schemas/usermanagementBulkImportType'
    usermanagementBulkImportDetail:
      type: object
      properties:
        row:
          type: integer
          format: int32
        status:
          $ref: '#/components/schemas/BulkImportDetailImportStatus'
        messages:
          type: array
          items:
            type: string
    usermanagementBulkImportResponse:
      type: object
      properties:
        success:
          type: boolean
        bulkImport:
          $ref: '#/components/schemas/usermanagementBulkImport'
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementBulkImportType:
      type: string
      enum:
        - CLIENTS
        - CLIENT_USER_ASSIGNMENTS
        - USERS
        - CLIENT_OU_ASSIGNMENTS
      default: CLIENTS
    usermanagementBulkImportsResponse:
      type: object
      properties:
        success:
          type: boolean
        bulkImports:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementBulkImport'
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementCheckBotMessageSendPermissionRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        roomId:
          type: string
        userId:
          type: string
        botType:
          type: string
        botIds:
          type: array
          items:
            type: string
    usermanagementCheckBotMessageSendPermissionResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        hasPermission:
          type: boolean
        botMessagePermissions:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementBotMessageSendPermission'
    usermanagementCheckUserAcceptedTermsOfUseResponse:
      type: object
      properties:
        success:
          type: boolean
        accepted:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementCheckUserGroupNameRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        name:
          type: string
    usermanagementCheckUserGroupNameResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        isAvailable:
          type: boolean
    usermanagementClient:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        persona:
          $ref: '#/components/schemas/commonPersona'
        creationTimestamp:
          type: string
        lastUpdateTimestamp:
          type: string
        notes:
          type: string
        userAtDomain:
          type: string
        companyId:
          type: string
        userAssignments:
          type: array
          items:
            $ref: '#/components/schemas/commonUserAssignment'
          title: Denotes assignment of users to a client and permissions in such assignment
        status:
          $ref: '#/components/schemas/commonEntityStatus'
        identities:
          type: array
          items:
            $ref: '#/components/schemas/commonFederatedIdentity'
        platformRoles:
          $ref: '#/components/schemas/commonPlatformRoles'
        organizationalUnitId:
          type: string
          title: Denotes client's individual place in the corporate hierarchy in the client's company - deprecated
        externalCompanyId:
          type: string
        externalCompanyName:
          type: string
        externalCompany:
          $ref: '#/components/schemas/commonExternalCompany'
        version:
          type: string
          format: int64
        tags:
          type: array
          items:
            $ref: '#/components/schemas/commonTag'
        notMonitored:
          type: boolean
          description: Denotes a client whose messages should not monitored for compliance needs.
        isPrivate:
          type: boolean
          title: Personal contact
        type:
          $ref: '#/components/schemas/usermanagementClientType'
        userLatestUnassignmentHistory:
          type: object
          additionalProperties:
            type: string
        userGroups:
          type: array
          items:
            $ref: '#/components/schemas/commonUserGroup'
      title: End user, client, of the platform
    usermanagementClientInitiateChatToAMResolvedData:
      type: object
      properties:
        userId:
          type: string
        clientId:
          type: string
        clientProfileId:
          type: string
        isClientAssignedToAM:
          type: boolean
        canAMIntegrateWithClient:
          type: boolean
    usermanagementClientList:
      type: object
      properties:
        client:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementClient'
    usermanagementClientPermissionsResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/commonTargetEntity'
        permissionList:
          $ref: '#/components/schemas/commonPermissionList'
    usermanagementClientResponse:
      type: object
      properties:
        client:
          $ref: '#/components/schemas/usermanagementClient'
        error:
          $ref: '#/components/schemas/commonServiceError'
        success:
          type: boolean
    usermanagementClientType:
      type: string
      enum:
        - CLIENT
        - CLIENT_PROFILE
      default: CLIENT
    usermanagementClientVisibilityFilter:
      type: object
      properties:
        externalCompanyIds:
          type: array
          items:
            type: string
        orgUnits:
          type: array
          items:
            type: string
        delegatedIds:
          type: array
          items:
            type: string
    usermanagementClientsResponse:
      type: object
      properties:
        clients:
          $ref: '#/components/schemas/usermanagementClientList'
        error:
          $ref: '#/components/schemas/commonServiceError'
        pageNumber:
          type: integer
          format: int32
        numberOfPages:
          type: integer
          format: int32
        success:
          type: boolean
        total:
          type: integer
          format: int32
    usermanagementCompaniesResponse:
      type: object
      properties:
        company:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementCompany'
        pageNumber:
          type: integer
          format: int32
        numberOfPages:
          type: integer
          format: int32
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementCompany:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        logoUrl:
          type: string
        description:
          type: string
        creationTimestamp:
          type: string
        domainName:
          type: string
        location:
          type: string
        resellerId:
          type: string
        fullName:
          type: string
        status:
          $ref: '#/components/schemas/commonEntityStatus'
        sso:
          type: boolean
        shareClients:
          type: boolean
        identityProviders:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementIdentityProvider'
        privacyPolicy:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/commonAttribute'
        defaultUserGroupId:
          type: string
        loginLogoUrl:
          type: string
    usermanagementCompanyIdentifier:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        fullName:
          type: string
        logoUrl:
          type: string
        sso:
          type: boolean
        loginLogoUrl:
          type: string
        applicationId:
          type: string
    usermanagementCompanyIdentifiersResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        companies:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementCompanyIdentifier'
    usermanagementCompanyProvisionalCounts:
      type: object
      properties:
        totalUsers:
          type: string
          format: int64
        activatedUsers:
          type: string
          format: int64
        totalClients:
          type: string
          format: int64
        activatedClients:
          type: string
          format: int64
        totalUserFederatedIdentities:
          type: string
          format: int64
        activatedUserFederatedIdentities:
          type: string
          format: int64
        totalClientFederatedIdentities:
          type: string
          format: int64
        activatedClientFederatedIdentities:
          type: string
          format: int64
    usermanagementCompanyProvisionalCountsResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        provisionalCounts:
          $ref: '#/components/schemas/usermanagementCompanyProvisionalCounts'
    usermanagementCompanyPublicInfo:
      type: object
      properties:
        sso:
          type: boolean
        logoUrl:
          type: string
        fullName:
          type: string
        name:
          type: string
        termsAndConditions:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/commonAttribute'
        loginLogoUrl:
          type: string
    usermanagementCompanyResponse:
      type: object
      properties:
        company:
          $ref: '#/components/schemas/usermanagementCompany'
        error:
          $ref: '#/components/schemas/commonServiceError'
        success:
          type: boolean
    usermanagementComparator:
      type: string
      enum:
        - EQ
        - NE
        - CO
        - SW
        - EW
        - PR
        - GT
        - GE
        - LT
        - LE
      default: EQ
    usermanagementContact:
      type: object
      properties:
        id:
          type: string
        displayName:
          type: string
    usermanagementContactListResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        contact:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementContact'
    usermanagementContactListType:
      type: string
      enum:
        - CONTACT_USER
        - CONTACT_CLIENT
        - CONTACT_NVC
        - CONTACT_CLIENT_PROFILE
      default: CONTACT_USER
    usermanagementContactSearchType:
      type: string
      enum:
        - ALL_CONTACT
        - PRIVATE_CONTACT
        - COMPANY_CONTACT
      default: ALL_CONTACT
    usermanagementCountClientsResponse:
      type: object
      properties:
        success:
          type: boolean
        total:
          type: integer
          format: int32
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementCountUsersResponse:
      type: object
      properties:
        success:
          type: boolean
        total:
          type: integer
          format: int32
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementCreateDelegationsRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        delegations:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementDelegation'
    usermanagementDelegation:
      type: object
      properties:
        id:
          type: string
        targetEntity:
          type: string
        delegator:
          type: string
        delegatee:
          type: string
        startTime:
          type: string
        endTime:
          type: string
        status:
          $ref: '#/components/schemas/usermanagementDelegationStatus'
        creationTimestamp:
          type: string
        lastUpdateTimestamp:
          type: string
        delegatedRooms:
          type: array
          items:
            type: string
    usermanagementDelegationResponse:
      type: object
      properties:
        delegation:
          $ref: '#/components/schemas/usermanagementDelegation'
        error:
          $ref: '#/components/schemas/commonServiceError'
        success:
          type: boolean
    usermanagementDelegationStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
      default: ACTIVE
    usermanagementDelegationsCreationResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        delegations:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementDelegation'
        failures:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementFailedDelegation'
    usermanagementDelegationsResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        delegations:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementDelegation'
    usermanagementDeletePermissionRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        permissionId:
          type: string
    usermanagementDevice:
      type: object
      properties:
        uniqueIdentifier:
          type: string
        hardwareIdentifier:
          type: string
        applications:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementApplicationOnDevice'
    usermanagementDownloadExtCompanyClientsResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        filePreSignedUrl:
          type: string
    usermanagementDownloadExternalCompanyUsersResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        filePreSignedUrl:
          type: string
    usermanagementDownloadOrgUnitClientsResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        filePreSignedUrl:
          type: string
    usermanagementEmailAvailableResponse:
      type: object
      properties:
        success:
          type: boolean
        available:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementEmailTemplate:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        companyId:
          type: string
        languageCode:
          type: string
        subject:
          type: string
        template:
          type: string
        status:
          $ref: '#/components/schemas/commonEntityStatus'
      title: Email Template
    usermanagementEmailTemplateResponse:
      type: object
      properties:
        emailTemplate:
          $ref: '#/components/schemas/usermanagementEmailTemplate'
        error:
          $ref: '#/components/schemas/commonServiceError'
        success:
          type: boolean
    usermanagementEmailTemplatesResponse:
      type: object
      properties:
        emailTemplate:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementEmailTemplate'
        pageNumber:
          type: integer
          format: int32
        numberOfPages:
          type: integer
          format: int32
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementEvaluateClientPermissionsRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        permissionNames:
          type: array
          items:
            type: string
        roleType:
          $ref: '#/components/schemas/commonRoleType'
        companyId:
          type: string
        clientId:
          type: string
        userId:
          type: string
    usermanagementEvaluatePermissionsRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        permissionNames:
          type: array
          items:
            type: string
        roleType:
          $ref: '#/components/schemas/commonRoleType'
        targetEntity:
          $ref: '#/components/schemas/commonTargetEntity'
    usermanagementEvaluatePermissionsResponse:
      type: object
      properties:
        success:
          type: boolean
        missingPermissions:
          type: array
          items:
            type: string
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementExportClientChatRoomReportResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        filePreSignedUrl:
          type: string
    usermanagementExportClientIntegrationStatusReportResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        filePreSignedUrl:
          type: string
    usermanagementExternalClient:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        persona:
          $ref: '#/components/schemas/commonPersona'
        company:
          $ref: '#/components/schemas/usermanagementExternalCompanyInformation'
    usermanagementExternalCompanyByNameResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        externalCompanies:
          type: array
          items:
            $ref: '#/components/schemas/commonExternalCompany'
    usermanagementExternalCompanyClientAssignmentsResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        updatedClientIds:
          type: array
          items:
            type: string
        failedClientIds:
          type: array
          items:
            type: string
    usermanagementExternalCompanyInformation:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        organizationalUnit:
          $ref: '#/components/schemas/usermanagementExternalCompanyOrganizationalUnit'
      title: Represents a company that external clients belong to
    usermanagementExternalCompanyOrganizationalUnit:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      description: |-
        Represents an organizational unit in the company that external clients belong to.
        Optional attribute if clien't company has a flat structure.
    usermanagementExternalCompanyOwnership:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        parent:
          $ref: '#/components/schemas/usermanagementExternalCompanyOwnership'
      title: Representation of external company with any potential parent
    usermanagementExternalCompanyOwnershipResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        ownership:
          $ref: '#/components/schemas/usermanagementExternalCompanyOwnership'
    usermanagementExternalCompanyResponse:
      type: object
      properties:
        externalCompany:
          $ref: '#/components/schemas/commonExternalCompany'
        error:
          $ref: '#/components/schemas/commonServiceError'
        success:
          type: boolean
    usermanagementExternalCompanyUserAssignmentsResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        updatedUserIds:
          type: array
          items:
            type: string
        failedUserIds:
          type: array
          items:
            type: string
    usermanagementFailedDelegation:
      type: object
      properties:
        delegation:
          $ref: '#/components/schemas/usermanagementDelegation'
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementFederatedIdentitiesResponse:
      type: object
      properties:
        success:
          type: boolean
        identities:
          type: array
          items:
            $ref: '#/components/schemas/commonFederatedIdentity'
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementFederatedIdentityResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        federatedIdentity:
          $ref: '#/components/schemas/commonFederatedIdentity'
    usermanagementFile:
      type: object
      properties:
        content:
          type: string
          format: byte
    usermanagementFilterNode:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/usermanagementNodeType'
        attributeName:
          type: string
        comparator:
          $ref: '#/components/schemas/usermanagementComparator'
        value:
          type: string
        parent:
          $ref: '#/components/schemas/usermanagementFilterNode'
        leftNode:
          $ref: '#/components/schemas/usermanagementFilterNode'
        rightNode:
          $ref: '#/components/schemas/usermanagementFilterNode'
    usermanagementFindBaseUserNumberMappingsResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementBaseUserNumberMapping'
    usermanagementGenerateExternalCompanyIdResponse:
      type: object
      properties:
        success:
          type: boolean
        id:
          type: string
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementGenerateNameResponse:
      type: object
      properties:
        success:
          type: boolean
        name:
          type: string
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementGenerationStrategy:
      type: string
      enum:
        - None
        - Gen8Digits
        - Gen4Digits4Chars
      default: None
    usermanagementGetAcceptedTermsOfUseLogResponse:
      type: object
      properties:
        success:
          type: boolean
        acceptedTermOfUse:
          $ref: '#/components/schemas/usermanagementAcceptedTermsOfUseLog'
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementGetClientByPhoneNumberResponse:
      type: object
      properties:
        clients:
          $ref: '#/components/schemas/usermanagementClientList'
        error:
          $ref: '#/components/schemas/commonServiceError'
        success:
          type: boolean
    usermanagementGetClientVisibilityFilterResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        clientVisibilityFilter:
          $ref: '#/components/schemas/usermanagementClientVisibilityFilter'
    usermanagementGetClientsRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        userId:
          type: string
        clientIdList:
          $ref: '#/components/schemas/commonIdList'
        externalCompanyId:
          type: string
        adminAdditionalParams:
          $ref: '#/components/schemas/usermanagementAdminAdditionalParams'
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        sharedSearchType:
          $ref: '#/components/schemas/usermanagementSharedClientSearchType'
        statuses:
          type: array
          items:
            type: string
        isFromApiServer:
          type: boolean
          title: temporary flag to indicate request comes from api-server, i.e.RBAC should not be applied
        contactSearchType:
          $ref: '#/components/schemas/usermanagementContactSearchType'
    usermanagementGetCompanyPublicInfoResponse:
      type: object
      properties:
        success:
          type: boolean
        companyPublicInfo:
          $ref: '#/components/schemas/usermanagementCompanyPublicInfo'
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementGetDataSegregationRulesResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        dataSegregationRules:
          type: array
          items:
            $ref: '#/components/schemas/commonDataSegregationRule'
    usermanagementGetEmailTemplateParams:
      type: object
      properties:
        name:
          type: string
        companyId:
          type: string
        languageCode:
          type: string
    usermanagementGetFlatOrganizationalUnitsResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        organizationalUnits:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementOrganizationalUnit'
    usermanagementGetOrSaveExternalCompanyRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        externalCompany:
          $ref: '#/components/schemas/commonExternalCompany'
        parentExternalCompany:
          $ref: '#/components/schemas/commonExternalCompany'
    usermanagementGetOrgUnitsFilter:
      type: string
      enum:
        - NONE
        - CLIENT_VIEW_ACCESS
      default: NONE
    usermanagementGetOrganizationalUnitsByUserIdResponse:
      type: object
      properties:
        organizationalUnitIds:
          type: array
          items:
            type: string
        error:
          $ref: '#/components/schemas/commonServiceError'
        success:
          type: boolean
    usermanagementGetUserGroupsRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        idList:
          $ref: '#/components/schemas/commonIdList'
    usermanagementGetUserGroupsResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        userGroups:
          type: array
          items:
            $ref: '#/components/schemas/commonUserGroup'
    usermanagementGetUsersRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        userIdList:
          $ref: '#/components/schemas/commonIdList'
        query:
          type: string
        organizationalUnitId:
          type: string
        notInOrganizationalUnit:
          type: boolean
        assignedClientId:
          type: string
        parentOrganizationalUnitId:
          type: string
        externalCompanyId:
          type: string
        roleId:
          type: string
        adminAdditionalParams:
          $ref: '#/components/schemas/usermanagementAdminAdditionalParams'
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        statuses:
          type: array
          items:
            type: string
        isFromApiServer:
          type: boolean
          title: temporary flag to indicate request comes from api-server, i.e.RBAC should not be applied
      title: Get users
    usermanagementIdentityProvider:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/commonIdentityProviderType'
        id:
          type: string
        keycloakIdpAlias:
          type: string
        storeToken:
          type: boolean
    usermanagementImportExternalClientRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        client:
          $ref: '#/components/schemas/usermanagementExternalClient'
        operationType:
          $ref: '#/components/schemas/usermanagementOperationType'
      description: |-
        ImportExternalClientRequest represents request to be sent as part of invocation of importExternalClient function.
        Contents of the request is a single entry of a client which exists on external platform.
    usermanagementImportExternalClientResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementInvitationTemplate:
      type: object
      properties:
        id:
          type: string
        companyId:
          type: string
        name:
          type: string
        language:
          type: string
        template:
          type: string
    usermanagementInvitationTemplateResponse:
      type: object
      properties:
        success:
          type: boolean
        invitationTemplate:
          $ref: '#/components/schemas/usermanagementInvitationTemplate'
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementInvitationToken:
      type: object
      properties:
        token:
          type: string
        shortCode:
          type: string
        endpoint:
          type: string
        status:
          $ref: '#/components/schemas/commonEntityStatus'
        expirationTimestamp:
          type: string
      title: Invitation token of user
    usermanagementMsTeamsUser:
      type: object
      properties:
        userId:
          type: string
        aadId:
          type: string
        teamsConvoId:
          type: string
    usermanagementMsTeamsUserResponse:
      type: object
      properties:
        success:
          type: boolean
        msTeamsUser:
          $ref: '#/components/schemas/usermanagementMsTeamsUser'
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementMultiBotsHandling:
      type: string
      enum:
        - COEXIST
        - DISABLED
      default: COEXIST
      description: |2-
         - COEXIST: Bot with this value will process normally even if there are other active bots in room
         - DISABLED: Bot with this value won't process till all other bots leave room.
    usermanagementNameAvailableResponse:
      type: object
      properties:
        success:
          type: boolean
        available:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        checkedName:
          type: string
    usermanagementNodeType:
      type: string
      enum:
        - EMPTY_NODE
        - LEAF_NODE
        - AND_NODE
        - OR_NODE
        - NOT_NODE
      default: EMPTY_NODE
    usermanagementOperationType:
      type: string
      enum:
        - CREATE
        - UPDATE
        - DELETE
      default: CREATE
    usermanagementOrganizationalUnit:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        logoUrl:
          type: string
        description:
          type: string
        creationTimestamp:
          type: string
        companyId:
          type: string
        parentId:
          type: string
        status:
          $ref: '#/components/schemas/commonEntityStatus'
        identity:
          $ref: '#/components/schemas/commonFederatedIdentity'
        affinity:
          $ref: '#/components/schemas/commonEntityAffinity'
        platformRoles:
          $ref: '#/components/schemas/commonPlatformRoles'
        clientViewAccess:
          $ref: '#/components/schemas/commonClientViewAccess'
        identities:
          type: array
          items:
            $ref: '#/components/schemas/commonFederatedIdentity'
      title: Representation of an org unit in a company
    usermanagementOrganizationalUnitHierarchy:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementOrganizationalUnitHierarchy'
      title: Representation of org unit tree
    usermanagementOrganizationalUnitResponse:
      type: object
      properties:
        organizationalUnit:
          $ref: '#/components/schemas/usermanagementOrganizationalUnit'
        error:
          $ref: '#/components/schemas/commonServiceError'
        success:
          type: boolean
    usermanagementOrganizationalUnitsByNameResponse:
      type: object
      properties:
        organizationalUnits:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementOrganizationalUnit'
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementOrganizationalUnitsResponse:
      type: object
      properties:
        root:
          $ref: '#/components/schemas/usermanagementOrganizationalUnitHierarchy'
        error:
          $ref: '#/components/schemas/commonServiceError'
        success:
          type: boolean
    usermanagementPagedOrganizationalUnitsResponse:
      type: object
      properties:
        organizationalUnits:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementOrganizationalUnit'
        pagination:
          $ref: '#/components/schemas/commonResponsePagination'
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementPermissionResponse:
      type: object
      properties:
        success:
          type: boolean
        permission:
          $ref: '#/components/schemas/commonPermission'
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementPermissionsResponse:
      type: object
      properties:
        success:
          type: boolean
        permissions:
          $ref: '#/components/schemas/commonPermissionList'
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementPersonaPublic:
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
    usermanagementPhoneNumberAvailableResponse:
      type: object
      properties:
        success:
          type: boolean
        available:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementReseller:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        logoUrl:
          type: string
        description:
          type: string
        creationTimestamp:
          type: string
        status:
          $ref: '#/components/schemas/commonEntityStatus'
    usermanagementResellerResponse:
      type: object
      properties:
        reseller:
          $ref: '#/components/schemas/usermanagementReseller'
        error:
          $ref: '#/components/schemas/commonServiceError'
        success:
          type: boolean
    usermanagementResolveClientInitiateChatToAMResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/usermanagementClientInitiateChatToAMResolvedData'
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementRole:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        creationTimestamp:
          type: string
        lastUpdateTimestamp:
          type: string
        custom:
          type: boolean
        companyId:
          type: string
        type:
          $ref: '#/components/schemas/commonRoleType'
        affinity:
          $ref: '#/components/schemas/commonEntityAffinity'
        permissionIds:
          type: array
          items:
            type: string
        description:
          type: string
        identity:
          $ref: '#/components/schemas/commonFederatedIdentity'
        identities:
          type: array
          items:
            $ref: '#/components/schemas/commonFederatedIdentity'
        segregationRules:
          type: array
          items:
            $ref: '#/components/schemas/commonDataSegregationRule'
    usermanagementRoleAssignmentInformation:
      type: object
      properties:
        roleId:
          type: string
        roleName:
          type: string
        roleType:
          type: string
        inherited:
          type: boolean
        organizationalUnitId:
          type: string
        organizationalUnitName:
          type: string
        parentOrganizationalUnitId:
          type: string
        parentOrganizationalUnitName:
          type: string
    usermanagementRoleList:
      type: object
      properties:
        roles:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementRole'
    usermanagementRoleResponse:
      type: object
      properties:
        success:
          type: boolean
        role:
          $ref: '#/components/schemas/usermanagementRole'
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementRolesAssignmentResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementRoleAssignmentInformation'
    usermanagementRolesResponse:
      type: object
      properties:
        success:
          type: boolean
        roles:
          $ref: '#/components/schemas/usermanagementRoleList'
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementSamlClaim:
      type: object
      properties:
        attribute:
          type: string
        samlAttribute:
          type: string
    usermanagementSamlMapping:
      type: object
      properties:
        id:
          type: string
        companyId:
          type: string
        samlClaims:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementSamlClaim'
    usermanagementSamlMappingAttributeMetadata:
      type: object
      properties:
        name:
          type: string
        multiple:
          type: boolean
    usermanagementSamlMappingMetadata:
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementSamlMappingAttributeMetadata'
    usermanagementSamlMappingMetadataResponse:
      type: object
      properties:
        success:
          type: boolean
        samlMappingMetadata:
          $ref: '#/components/schemas/usermanagementSamlMappingMetadata'
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementSamlMappingResponse:
      type: object
      properties:
        success:
          type: boolean
        samlMapping:
          $ref: '#/components/schemas/usermanagementSamlMapping'
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementSaveBaseUserWithNewFederatedIdentitiesResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        user:
          $ref: '#/components/schemas/usermanagementUser'
        client:
          $ref: '#/components/schemas/usermanagementClient'
    usermanagementSaveClientRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        client:
          $ref: '#/components/schemas/usermanagementClient'
        password:
          type: string
        skipEmail:
          type: boolean
    usermanagementSaveClientsRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        clients:
          $ref: '#/components/schemas/usermanagementClientList'
    usermanagementSaveCompanyRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        company:
          $ref: '#/components/schemas/usermanagementCompany'
      title: save company
    usermanagementSaveEmailTemplateRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        emailTemplate:
          $ref: '#/components/schemas/usermanagementEmailTemplate'
    usermanagementSaveExternalCompanyRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        externalCompany:
          $ref: '#/components/schemas/commonExternalCompany'
    usermanagementSavePermissionRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        permission:
          $ref: '#/components/schemas/commonPermission'
    usermanagementSaveSamlMappingRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        samlMapping:
          $ref: '#/components/schemas/usermanagementSamlMapping'
    usermanagementSaveUserRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        user:
          $ref: '#/components/schemas/usermanagementUser'
        password:
          type: string
        sendEmail:
          type: boolean
        emailContent:
          type: string
        isVerified:
          type: boolean
        organizationalUnitIdentity:
          $ref: '#/components/schemas/commonFederatedIdentity'
        roleIdentity:
          type: array
          items:
            $ref: '#/components/schemas/commonFederatedIdentity'
          title: Pointer to optional roles
    usermanagementSearchBotRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        searchString:
          type: string
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        statuses:
          type: array
          items:
            type: string
        type:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementBotType'
    usermanagementSearchBotsResponse:
      type: object
      properties:
        success:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        numberOfPages:
          type: integer
          format: int32
        bots:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementBot'
        error:
          $ref: '#/components/schemas/commonServiceError'
        total:
          type: integer
          format: int32
    usermanagementSearchClientsResponse:
      type: object
      properties:
        success:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        numberOfPages:
          type: integer
          format: int32
        clients:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementClient'
        error:
          $ref: '#/components/schemas/commonServiceError'
        total:
          type: integer
          format: int32
    usermanagementSearchExternalCompaniesResponse:
      type: object
      properties:
        success:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        numberOfPages:
          type: integer
          format: int32
        externalCompanies:
          type: array
          items:
            $ref: '#/components/schemas/commonExternalCompany'
        error:
          $ref: '#/components/schemas/commonServiceError'
        total:
          type: integer
          format: int32
    usermanagementSearchRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        searchString:
          type: string
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        filters:
          type: array
          items:
            $ref: '#/components/schemas/commonSearchFilters'
          description: |-
            Filter operates with direct attributes in data object on database level.
            Use of filters to be handled with care since it bypasses indexing.
        statuses:
          type: array
          items:
            type: string
        userId:
          type: string
        negativeFilter:
          type: boolean
          title: If true, filter condition will be evaluated as "IS NOT IN", if false "IS IN"
        externalCompanyIds:
          type: array
          items:
            type: string
        exclusivelyByExternalCompanies:
          type: boolean
        parentOrganizationalUnitId:
          type: string
        isFromApiServer:
          type: boolean
          title: temporary flag to indicate request comes from api-server, i.e.RBAC should not be applied
        advancedFilters:
          type: array
          items:
            $ref: '#/components/schemas/commonSearchFilters'
          title: |-
            this advanced filters should not be used along with current filters and search string,
            this should replace current search string to reduce complexity of building search query
    usermanagementSearchUsersResponse:
      type: object
      properties:
        success:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        numberOfPages:
          type: integer
          format: int32
        users:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementUser'
        error:
          $ref: '#/components/schemas/commonServiceError'
        total:
          type: integer
          format: int32
    usermanagementSetting:
      type: object
      properties:
        companyId:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/commonAttribute'
    usermanagementSettingResponse:
      type: object
      properties:
        success:
          type: boolean
        setting:
          $ref: '#/components/schemas/usermanagementSetting'
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementSharedClientSearchType:
      type: string
      enum:
        - PRIVATE
        - PUBLIC
        - ALL
      default: PRIVATE
    usermanagementSubmitBulkImportClientRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        fileUrl:
          type: string
        usernameGenerationMode:
          $ref: '#/components/schemas/usermanagementGenerationStrategy'
        importType:
          $ref: '#/components/schemas/usermanagementBulkImportType'
        enableApiKey:
          $ref: '#/components/schemas/commonEnableApiKey'
        sendEmail:
          type: boolean
    usermanagementSubmitBulkImportResponse:
      type: object
      properties:
        success:
          type: boolean
        id:
          type: string
        error:
          $ref: '#/components/schemas/commonServiceError'
        importType:
          $ref: '#/components/schemas/usermanagementBulkImportType'
    usermanagementTerminateBulkImportResponse:
      type: object
      properties:
        success:
          type: boolean
        bulkImport:
          $ref: '#/components/schemas/usermanagementBulkImport'
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementTriggeredBy:
      type: string
      enum:
        - NO_TRIGGERED_BY
        - TRIGGERED_BY_WORKFLOW
      default: NO_TRIGGERED_BY
    usermanagementUnassignUserRolesRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        users:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementUserRolesMapping'
    usermanagementUpdateClientStatusResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementUpdateClientUserAssignmentsRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        clientId:
          type: string
        userAssignments:
          type: array
          items:
            $ref: '#/components/schemas/commonUserAssignment'
        clientProfileId:
          type: string
    usermanagementUpdateClientsStatusRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        clientIds:
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/commonEntityStatus'
    usermanagementUpdateClientsStatusResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        failedClients:
          type: array
          items:
            type: string
    usermanagementUpdateClientsUserAssignmentsRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        clientIds:
          type: array
          items:
            type: string
        userAssignments:
          type: array
          items:
            $ref: '#/components/schemas/commonUserAssignment'
        clientProfileIds:
          type: array
          items:
            type: string
    usermanagementUpdateInfoMfaResponse:
      type: object
      properties:
        ticket:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementUpdatePasswordRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        userIdentifier:
          $ref: '#/components/schemas/commonUserIdentifier'
        newPassword:
          type: string
        oldPassword:
          type: string
    usermanagementUpdatePhoneNumberMfaRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        phoneNumber:
          type: string
      title: Update user phone number MFA
    usermanagementUpdatePhoneNumberMfaResponse:
      type: object
      properties:
        ticket:
          type: string
        phoneNumber:
          type: string
        error:
          $ref: '#/components/schemas/commonServiceError'
    usermanagementUpdatePhoneNumberRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        oldTicket:
          type: string
        oldPasscode:
          type: string
        ticket:
          type: string
        passcode:
          type: string
      title: Update user phone number
    usermanagementUpdateType:
      type: string
      enum:
        - PHONE_NUMBER
        - EMAIL
        - ALL_TYPE
      default: PHONE_NUMBER
    usermanagementUpdateUsersOrganizationalUnitRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        users:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementUserOrganizationalUnitMapping'
    usermanagementUpdateUsersStatusRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        userIds:
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/commonEntityStatus'
    usermanagementUpdateUsersStatusResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        failedUsers:
          type: array
          items:
            type: string
    usermanagementUser:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        persona:
          $ref: '#/components/schemas/commonPersona'
        creationTimestamp:
          type: string
        lastUpdateTimestamp:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/commonUserRole'
        companyId:
          type: string
        organizationalUnitId:
          type: string
        status:
          $ref: '#/components/schemas/commonEntityStatus'
        invitationToken:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementInvitationToken'
        identities:
          type: array
          items:
            $ref: '#/components/schemas/commonFederatedIdentity'
        platformRoles:
          $ref: '#/components/schemas/commonPlatformRoles'
        externalCompanyIds:
          type: array
          items:
            type: string
        organizationalUnit:
          $ref: '#/components/schemas/usermanagementOrganizationalUnit'
        version:
          type: string
          format: int64
        termsOfUseVersion:
          type: integer
          format: int32
        acceptedTermsOfUseId:
          type: string
        userGroupIds:
          type: array
          items:
            type: string
      title: User of the platform, can have multiple roles
    usermanagementUserGroupAssignment:
      type: object
      properties:
        userId:
          type: string
        userGroup:
          $ref: '#/components/schemas/commonUserGroup'
    usermanagementUserGroupRequest:
      type: object
      properties:
        requestIdentity:
          $ref: '#/components/schemas/commonServiceRequestIdentity'
        userGroup:
          $ref: '#/components/schemas/commonUserGroup'
    usermanagementUserGroupResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        userGroup:
          $ref: '#/components/schemas/commonUserGroup'
    usermanagementUserInvitationEmailResponse:
      type: object
      properties:
        email:
          type: string
        error:
          $ref: '#/components/schemas/commonServiceError'
        success:
          type: boolean
    usermanagementUserOrganizationalUnitMapping:
      type: object
      properties:
        id:
          type: string
        organizationalUnitId:
          type: string
    usermanagementUserPublicResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        id:
          type: string
        userName:
          type: string
        type:
          type: string
        company:
          type: string
        persona:
          $ref: '#/components/schemas/usermanagementPersonaPublic'
        rfqVerified:
          type: string
    usermanagementUserResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/usermanagementUser'
        error:
          $ref: '#/components/schemas/commonServiceError'
        success:
          type: boolean
        isEmailChange:
          type: boolean
    usermanagementUserRolesMapping:
      type: object
      properties:
        id:
          type: string
        platformRoles:
          $ref: '#/components/schemas/commonPlatformRoles'
    usermanagementUserType:
      type: string
      enum:
        - USER
        - CLIENT
        - BOT
      default: USER
    usermanagementUsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/usermanagementUser'
        pageNumber:
          type: integer
          format: int32
        numberOfPages:
          type: integer
          format: int32
        success:
          type: boolean
        error:
          $ref: '#/components/schemas/commonServiceError'
        total:
          type: integer
          format: int32
x-readme:
  explorer-enabled: true
  proxy-enabled: true
  samples-enabled: true
